#include <vector>
#include <algorithm>

/*
Quick Seletion 알고리즘
퀵 셀렉션 알고리즘은 어떠한 임의의 숫자배열이 있다고 했을 때 k번째로 작은 값 혹은 큰 값을 찾을 때 사용하는 알고리즘

이름에서도 알 수 있다시피 퀵 정렬을 활용한다. 
그 중에서도 파티션 함수의 기능을 이용하는데 피봇 기준으로 나눠서 끝까지 정렬하는 것이 원래 파티션 함수의 역할이었다면
이 알고리즘에서는 끝까지 정렬을 진행하지 않고 파티션을 할 때마다 k와 얼마나 차이가 나는지를 확인한다. 
파티션 함수가 리턴하는 값을 p라고 하면 p와 k를 비교하면서 그 결과에 따라 파티션을 어떻게 나눌지를 결정하기 때문에
모든 부분배열을 쪼개서 정렬하는 것이 아닌 k를 만족하는 범위 안에 있는 부분배열만 파티션 함수를 호출한다고 보면 된다.

C++에서는 algorithm 라이브러리에 nth_element 함수가 있다(반환형은 void고 N번째 자리가 확정될 때 까지만 정렬)
*/

int kth(std::vector<int> &a, int k) {
	int ans = 0;
    nth_element(a.begin(), a.begin() + k-1, a.end()); //시작 범위, n번째까지, 마지막 범위
    ans = a[k-1];
	return ans;
}
